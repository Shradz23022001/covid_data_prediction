# -*- coding: utf-8 -*-
"""assign1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ArJxmEud-i5NNgt1jR5FyW6K-ogMUAfY
"""

import numpy as np
import pandas as pd 
import matplotlib.pyplot as plt

covid_data = pd.read_csv('/content/us-states.csv')
print(covid_data)

print(covid_data.dtypes)

covid_data=pd.DataFrame(covid_data)
print(covid_data)

covid_data.dtypes

#covid_data.groupby(['state']).sum()

print(covid_data)

covid_data = covid_data.loc[((covid_data['state'] == 'New York') |
                                (covid_data['state'] == 'Texas')|(covid_data['state'] =='Wyoming' )|(covid_data['state'] == 'Alaska'))]
                                

print(covid_data)

print(covid_data.dtypes)

import datetime

covid_data["date"]=pd.to_datetime(covid_data["date"])

covid_data.dtypes

from datetime import date

def incr_date(row):
    row.date = row.date.toordinal()
    return row

covid_data=covid_data.apply(incr_date,axis = 'columns')

covid_data.dtypes

covid_data.sort_values('state')

covid_data.groupby(['date']).sum()

Covid_Data=covid_data.copy()

x =covid_data['date'].unique()
x.sort()
x = np.array(x)
print(x)

y=covid_data.groupby(['date']).sum()['cases']
y = np.array(y)
print(y)

print(type(x))
print(type(y))

from sklearn.model_selection import train_test_split
train_x,test_x,train_y,test_y = train_test_split(x,y,
                                                 test_size = 0.2,
                                                 random_state = 2021)

print(train_x.shape)
print(train_y.shape)
print(test_x.shape)
print(test_y.shape)

train_x = np.reshape(train_x,(-1,1))
test_x = np.reshape(test_x,(-1,1))
train_y = np.reshape(train_y,(-1,1))
test_y = np.reshape(test_y,(-1,1))

print(train_x.shape)
print(train_y.shape)
print(test_x.shape)
print(test_y.shape)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
#fit the model 
regressor.fit(train_x,train_y)
print(regressor.coef_)
print(regressor.intercept_)

pred_y = regressor.predict(test_x)

for i in range(0,len(pred_y)):
  print("Predicted: ",pred_y[i]," and Actual: ",test_y[i])

from datetime import datetime as dt

Covid_Data['date'] = Covid_Data.date.apply(lambda x: dt.fromordinal(x)).dt.strftime('%d-%m-%Y')

print(Covid_Data)

Dates=Covid_Data['date'].unique()

Dates = np.array(Dates)

print(Dates)

plt.scatter(x,y,color='darkred',s=1,)
font_title = {'family':'serif','color':'hotpink','size':25}
plt.title("COVID DATA",fontdict = font_title)
#plt.xticks(Dates)
plt.xlabel('Date')
plt.ylabel('cases')
#import matplotlib.pyplot as plt
#plt.figure(figsize=(20,10))
plt.show()

plt.scatter(train_x,train_y,color='darkred',s=5)
plt.plot(train_x,regressor.predict(train_x),color='blue')
plt.xlabel('date')
plt.ylabel('cases')
plt.show()

x = np.reshape(x,(-1,1))
y = np.reshape(y,(-1,1))
r_squared = regressor.score(x,y)
print(r_squared)